@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
@import url("https://fonts.googleapis.com/css?family=Poppins:300,regular,500,600,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Lora:regular,500,600,700&display=swap");

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Poppins";
$fontSize: rem(15); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$blue: #0fafe9;
$error: #ff1d0e;
$text_1: #0b0b0c;
$text_2: #656567;
$text_3: #b9b9b9;
$text_4: #8786ad;
$light: #ebebeb;
$secondary: #33334f;
$white: #fff;
$black: #000;

// Цвет шрифта по умолчанию
$mainColor: $text_1;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1640;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
    color: $text_1;
    background-color: $white;
    // Скролл заблокирован
    .lock & {
        overflow: hidden;
        touch-action: none;
    }
    // Сайт загружен
    .loaded & {
    }
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    // Прижимаем footer
    > main {
        flex: 1 1 auto;
    }
    // Фикс для слайдеров
    > * {
        min-width: 0;
    }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

[class*="__container"] {
    @if ($maxWidthContainer>0) {
        max-width: rem($maxWidthContainer);
        box-sizing: content-box;
        margin: 0 auto;
    }
    @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
    }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "_pages/home";

//<ОСНОВНОЙ БЛОК>====================================================================================================
.page {
    flex: 1 1 auto;
    @include adaptiv-value("margin-bottom", 50, 20, 1);
    &__home {
        @include adaptiv-value("padding-top", 225, 90, 1);
    }
    &__companies {
        @include adaptiv-value("padding-top", 80, 40, 1);
    }
    &__body {
        @include adaptiv-value("padding-top", 100, 40, 1);
        &.body-workshop {
            @include adaptiv-value("padding-top", 180, 90, 1);
            @include adaptiv-value("padding-bottom", 50, 25, 1);
        }
        &.body-account {
            @include adaptiv-value("padding-top", 200, 90, 1);
        }
        &.body-card {
            @include adaptiv-value("padding-top", 200, 90, 1);
        }
        &.body-billing {
            @include adaptiv-value("padding-top", 200, 90, 1);
        }
        &.body-thanks {
            @include adaptiv-value("padding-top", 200, 90, 1);
        }
        &.body-registr {
            @include adaptiv-value("padding-top", 200, 90, 1);
        }
    }
    &__banner {
        @include adaptiv-value("padding-top", 50, 40, 1);
        @media (max-width: $md3+px) {
            @include adaptiv-value("padding-top", 50, 30, 1);
        }
    }

    &__related {
        @include adaptiv-value("padding-top", 100, 40, 1);
    }
}
